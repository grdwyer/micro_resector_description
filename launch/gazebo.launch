<?xml version="1.0"?>
<launch>
    <!-- These are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="rviz" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="hardware_interface" default="PositionJointInterface"/>
    
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    
    <!-- Load Description -->
    <param name="robot_description" command="xacro '$(find micro_resector_description)/urdf/full_setup.urdf.xacro' hardware_interface:=$(arg hardware_interface)" />

    <!-- RViz -->
    <group if="$(arg rviz)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find micro_resector_description)/launch/urdf.rviz" />
    </group>

    <!-- Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="worlds/empty.world"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    </include>
    
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model resector -param robot_description"/>

    <!-- ROS Controller -->
    <rosparam file="$(find micro_resector_description)/launch/controller.yaml" command="load" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="joint_state_controller scalpel_controller tweezer_controller sample_holder_controller --shutdown-timeout 2" />

    <!-- Robot State Publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <!-- <remap from="joint_states" to="/$(arg robot_name)/joint_states" /> -->
    </node>
</launch>
